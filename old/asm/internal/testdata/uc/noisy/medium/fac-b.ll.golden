target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"
@a = global i32 0
define i32 @fac(i32 %n) {
0:
	%1 = alloca i32
	%2 = alloca i32
	store i32 %n, i32* %2
	%3 = load i32, i32* %2
	%4 = icmp eq i32 %3, 0
	br i1 %4, label %5, label %6
5:
	store i32 1, i32* %1
	br label %12
6:
	%7 = load i32, i32* %2
	%8 = load i32, i32* %2
	%9 = sub i32 %8, 1
	%10 = call i32 @fac(i32 %9)
	%11 = mul i32 %7, %10
	store i32 %11, i32* %1
	br label %12
12:
	%13 = load i32, i32* %1
	ret i32 %13
}
define i32 @main() {
0:
	%1 = alloca i32
	%i = alloca i32
	%space = alloca [2 x i8]
	%cr = alloca [2 x i8]
	store i32 0, i32* %1
	%2 = getelementptr [2 x i8], [2 x i8]* %space, i32 0, i64 0
	store i8 32, i8* %2
	%3 = getelementptr [2 x i8], [2 x i8]* %space, i32 0, i64 1
	store i8 0, i8* %3
	%4 = getelementptr [2 x i8], [2 x i8]* %cr, i32 0, i64 0
	store i8 10, i8* %4
	%5 = getelementptr [2 x i8], [2 x i8]* %cr, i32 0, i64 1
	store i8 0, i8* %5
	store i32 0, i32* %i
	br label %6
6:
	%7 = load i32, i32* %i
	%8 = icmp sle i32 %7, 10
	br i1 %8, label %9, label %17
9:
	%10 = load i32, i32* %i
	call void @putint(i32 %10)
	%11 = getelementptr [2 x i8], [2 x i8]* %space, i32 0, i32 0
	call void @putstring(i8* %11)
	%12 = load i32, i32* %i
	%13 = call i32 @fac(i32 %12)
	call void @putint(i32 %13)
	%14 = getelementptr [2 x i8], [2 x i8]* %cr, i32 0, i32 0
	call void @putstring(i8* %14)
	%15 = load i32, i32* %i
	%16 = add i32 %15, 1
	store i32 %16, i32* %i
	br label %6
17:
	%18 = load i32, i32* %1
	ret i32 %18
}
declare void @putint(i32)
declare void @putstring(i8*)
