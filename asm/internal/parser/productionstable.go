// generated by gocc; DO NOT EDIT.

package parser

import (
	"github.com/llir/llvm/asm/internal/irx"
	"github.com/llir/llvm/ir/instruction"
	"github.com/llir/llvm/ir/types"
)

type (
	//TODO: change type and variable names to be consistent with other tables
	ProdTab      [numProductions]ProdTabEntry
	ProdTabEntry struct {
		String     string
		Id         string
		NTType     int
		Index      int
		NumSymbols int
		ReduceFunc func([]Attrib) (Attrib, error)
	}
	Attrib interface {
	}
)

var productionsTable = ProdTab{
	ProdTabEntry{
		String: `S' : Module	<<  >>`,
		Id:         "S'",
		NTType:     0,
		Index:      0,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Module : TopLevelDecls	<< irx.NewModule(X[0]) >>`,
		Id:         "Module",
		NTType:     1,
		Index:      1,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewModule(X[0])
		},
	},
	ProdTabEntry{
		String: `TopLevelDecls : empty	<<  >>`,
		Id:         "TopLevelDecls",
		NTType:     2,
		Index:      2,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `TopLevelDecls : TopLevelDeclList	<<  >>`,
		Id:         "TopLevelDecls",
		NTType:     2,
		Index:      3,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `TopLevelDeclList : TopLevelDecl	<< irx.NewTopLevelDeclList(X[0]) >>`,
		Id:         "TopLevelDeclList",
		NTType:     3,
		Index:      4,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewTopLevelDeclList(X[0])
		},
	},
	ProdTabEntry{
		String: `TopLevelDeclList : TopLevelDeclList TopLevelDecl	<< irx.AppendTopLevelDecl(X[0], X[1]) >>`,
		Id:         "TopLevelDeclList",
		NTType:     3,
		Index:      5,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.AppendTopLevelDecl(X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `TopLevelDecl : TargetSpec	<<  >>`,
		Id:         "TopLevelDecl",
		NTType:     4,
		Index:      6,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `TopLevelDecl : TypeDef	<<  >>`,
		Id:         "TopLevelDecl",
		NTType:     4,
		Index:      7,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `TopLevelDecl : GlobalVarDecl	<<  >>`,
		Id:         "TopLevelDecl",
		NTType:     4,
		Index:      8,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `TopLevelDecl : FuncDecl	<<  >>`,
		Id:         "TopLevelDecl",
		NTType:     4,
		Index:      9,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `TopLevelDecl : FuncDef	<<  >>`,
		Id:         "TopLevelDecl",
		NTType:     4,
		Index:      10,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `TopLevelDecl : AttrGroupDef	<<  >>`,
		Id:         "TopLevelDecl",
		NTType:     4,
		Index:      11,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `TopLevelDecl : MetadataDef	<<  >>`,
		Id:         "TopLevelDecl",
		NTType:     4,
		Index:      12,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `TargetSpec : "target" TargetLayout	<< irx.NewTargetLayout(X[1]) >>`,
		Id:         "TargetSpec",
		NTType:     5,
		Index:      13,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewTargetLayout(X[1])
		},
	},
	ProdTabEntry{
		String: `TargetSpec : "target" TargetTriple	<< irx.NewTargetTriple(X[1]) >>`,
		Id:         "TargetSpec",
		NTType:     5,
		Index:      14,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewTargetTriple(X[1])
		},
	},
	ProdTabEntry{
		String: `TargetLayout : "datalayout" "=" LayoutSpec	<< X[2], nil >>`,
		Id:         "TargetLayout",
		NTType:     6,
		Index:      15,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[2], nil
		},
	},
	ProdTabEntry{
		String: `LayoutSpec : string_lit	<<  >>`,
		Id:         "LayoutSpec",
		NTType:     7,
		Index:      16,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `TargetTriple : "triple" "=" TripleSpec	<< X[2], nil >>`,
		Id:         "TargetTriple",
		NTType:     8,
		Index:      17,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[2], nil
		},
	},
	ProdTabEntry{
		String: `TripleSpec : string_lit	<<  >>`,
		Id:         "TripleSpec",
		NTType:     9,
		Index:      18,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `TypeDef : Local "=" "type" Type	<<  >>`,
		Id:         "TypeDef",
		NTType:     10,
		Index:      19,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `GlobalVarDecl : Global "=" GlobalVar	<< irx.NewGlobalVarDecl(X[0], X[2]) >>`,
		Id:         "GlobalVarDecl",
		NTType:     11,
		Index:      20,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewGlobalVarDecl(X[0], X[2])
		},
	},
	ProdTabEntry{
		String: `GlobalVar : OptVarLinkage OptUnnamedAddr Immutable Type Value OptAlignment	<< irx.NewGlobalVar(X[2], X[3], X[4]) >>`,
		Id:         "GlobalVar",
		NTType:     12,
		Index:      21,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewGlobalVar(X[2], X[3], X[4])
		},
	},
	ProdTabEntry{
		String: `GlobalVar : ExternLinkage OptUnnamedAddr Immutable Type OptAlignment	<< irx.NewGlobalVar(X[2], X[3], nil) >>`,
		Id:         "GlobalVar",
		NTType:     12,
		Index:      22,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewGlobalVar(X[2], X[3], nil)
		},
	},
	ProdTabEntry{
		String: `OptVarLinkage : empty	<<  >>`,
		Id:         "OptVarLinkage",
		NTType:     13,
		Index:      23,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OptVarLinkage : VarLinkage	<<  >>`,
		Id:         "OptVarLinkage",
		NTType:     13,
		Index:      24,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `VarLinkage : "appending"	<<  >>`,
		Id:         "VarLinkage",
		NTType:     14,
		Index:      25,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `VarLinkage : "available_externally"	<<  >>`,
		Id:         "VarLinkage",
		NTType:     14,
		Index:      26,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `VarLinkage : "common"	<<  >>`,
		Id:         "VarLinkage",
		NTType:     14,
		Index:      27,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `VarLinkage : "internal"	<<  >>`,
		Id:         "VarLinkage",
		NTType:     14,
		Index:      28,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `VarLinkage : "linkonce"	<<  >>`,
		Id:         "VarLinkage",
		NTType:     14,
		Index:      29,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `VarLinkage : "linkonce_odr"	<<  >>`,
		Id:         "VarLinkage",
		NTType:     14,
		Index:      30,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `VarLinkage : "private"	<<  >>`,
		Id:         "VarLinkage",
		NTType:     14,
		Index:      31,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `VarLinkage : "weak"	<<  >>`,
		Id:         "VarLinkage",
		NTType:     14,
		Index:      32,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `VarLinkage : "weak_odr"	<<  >>`,
		Id:         "VarLinkage",
		NTType:     14,
		Index:      33,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ExternLinkage : "extern_weak"	<<  >>`,
		Id:         "ExternLinkage",
		NTType:     15,
		Index:      34,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ExternLinkage : "external"	<<  >>`,
		Id:         "ExternLinkage",
		NTType:     15,
		Index:      35,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `OptUnnamedAddr : empty	<<  >>`,
		Id:         "OptUnnamedAddr",
		NTType:     16,
		Index:      36,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OptUnnamedAddr : UnnamedAddr	<<  >>`,
		Id:         "OptUnnamedAddr",
		NTType:     16,
		Index:      37,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `UnnamedAddr : "unnamed_addr"	<<  >>`,
		Id:         "UnnamedAddr",
		NTType:     17,
		Index:      38,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Immutable : "constant"	<< true, nil >>`,
		Id:         "Immutable",
		NTType:     18,
		Index:      39,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return true, nil
		},
	},
	ProdTabEntry{
		String: `Immutable : "global"	<< false, nil >>`,
		Id:         "Immutable",
		NTType:     18,
		Index:      40,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return false, nil
		},
	},
	ProdTabEntry{
		String: `OptAlignment : empty	<<  >>`,
		Id:         "OptAlignment",
		NTType:     19,
		Index:      41,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OptAlignment : "," Alignment	<<  >>`,
		Id:         "OptAlignment",
		NTType:     19,
		Index:      42,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Alignment : "align" int_lit	<<  >>`,
		Id:         "Alignment",
		NTType:     20,
		Index:      43,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncDecl : "declare" OptExternLinkage FuncHeader	<< irx.NewFuncDecl(X[2]) >>`,
		Id:         "FuncDecl",
		NTType:     21,
		Index:      44,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewFuncDecl(X[2])
		},
	},
	ProdTabEntry{
		String: `OptExternLinkage : empty	<<  >>`,
		Id:         "OptExternLinkage",
		NTType:     22,
		Index:      45,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OptExternLinkage : ExternLinkage	<<  >>`,
		Id:         "OptExternLinkage",
		NTType:     22,
		Index:      46,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncDef : "define" OptFuncLinkage FuncHeader FuncBody	<< irx.NewFuncDef(X[2], X[3]) >>`,
		Id:         "FuncDef",
		NTType:     23,
		Index:      47,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewFuncDef(X[2], X[3])
		},
	},
	ProdTabEntry{
		String: `OptFuncLinkage : empty	<<  >>`,
		Id:         "OptFuncLinkage",
		NTType:     24,
		Index:      48,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OptFuncLinkage : FuncLinkage	<<  >>`,
		Id:         "OptFuncLinkage",
		NTType:     24,
		Index:      49,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncLinkage : "available_externally"	<<  >>`,
		Id:         "FuncLinkage",
		NTType:     25,
		Index:      50,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncLinkage : "external"	<<  >>`,
		Id:         "FuncLinkage",
		NTType:     25,
		Index:      51,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncLinkage : "internal"	<<  >>`,
		Id:         "FuncLinkage",
		NTType:     25,
		Index:      52,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncLinkage : "linkonce"	<<  >>`,
		Id:         "FuncLinkage",
		NTType:     25,
		Index:      53,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncLinkage : "linkonce_odr"	<<  >>`,
		Id:         "FuncLinkage",
		NTType:     25,
		Index:      54,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncLinkage : "private"	<<  >>`,
		Id:         "FuncLinkage",
		NTType:     25,
		Index:      55,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncLinkage : "weak"	<<  >>`,
		Id:         "FuncLinkage",
		NTType:     25,
		Index:      56,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncLinkage : "weak_odr"	<<  >>`,
		Id:         "FuncLinkage",
		NTType:     25,
		Index:      57,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncHeader : Result FuncName "(" Params ")" OptUnnamedAddr Attrs OptFuncAlignment	<< irx.NewFunc(X[0], X[1], X[3]) >>`,
		Id:         "FuncHeader",
		NTType:     26,
		Index:      58,
		NumSymbols: 8,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewFunc(X[0], X[1], X[3])
		},
	},
	ProdTabEntry{
		String: `Result : ResultAttrs ResultType	<< X[1], nil >>`,
		Id:         "Result",
		NTType:     27,
		Index:      59,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[1], nil
		},
	},
	ProdTabEntry{
		String: `ResultAttrs : empty	<<  >>`,
		Id:         "ResultAttrs",
		NTType:     28,
		Index:      60,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `ResultAttrs : ResultAttrList	<<  >>`,
		Id:         "ResultAttrs",
		NTType:     28,
		Index:      61,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ResultAttrList : ResultAttr	<<  >>`,
		Id:         "ResultAttrList",
		NTType:     29,
		Index:      62,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ResultAttrList : ResultAttrList ResultAttr	<<  >>`,
		Id:         "ResultAttrList",
		NTType:     29,
		Index:      63,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ResultAttr : string_lit	<<  >>`,
		Id:         "ResultAttr",
		NTType:     30,
		Index:      64,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ResultAttr : string_lit "=" string_lit	<<  >>`,
		Id:         "ResultAttr",
		NTType:     30,
		Index:      65,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ResultAttr : Alignment	<<  >>`,
		Id:         "ResultAttr",
		NTType:     30,
		Index:      66,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ResultAttr : "dereferenceable"	<<  >>`,
		Id:         "ResultAttr",
		NTType:     30,
		Index:      67,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ResultAttr : "dereferenceable" "(" int_lit ")"	<<  >>`,
		Id:         "ResultAttr",
		NTType:     30,
		Index:      68,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ResultAttr : "dereferenceable_or_null"	<<  >>`,
		Id:         "ResultAttr",
		NTType:     30,
		Index:      69,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ResultAttr : "dereferenceable_or_null" "(" int_lit ")"	<<  >>`,
		Id:         "ResultAttr",
		NTType:     30,
		Index:      70,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ResultAttr : "inreg"	<<  >>`,
		Id:         "ResultAttr",
		NTType:     30,
		Index:      71,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ResultAttr : "noalias"	<<  >>`,
		Id:         "ResultAttr",
		NTType:     30,
		Index:      72,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ResultAttr : "nonnull"	<<  >>`,
		Id:         "ResultAttr",
		NTType:     30,
		Index:      73,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ResultAttr : "signext"	<<  >>`,
		Id:         "ResultAttr",
		NTType:     30,
		Index:      74,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ResultAttr : "zeroext"	<<  >>`,
		Id:         "ResultAttr",
		NTType:     30,
		Index:      75,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncName : Global	<<  >>`,
		Id:         "FuncName",
		NTType:     31,
		Index:      76,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Params : empty	<<  >>`,
		Id:         "Params",
		NTType:     32,
		Index:      77,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `Params : "..."	<< irx.NewParams(nil, true) >>`,
		Id:         "Params",
		NTType:     32,
		Index:      78,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewParams(nil, true)
		},
	},
	ProdTabEntry{
		String: `Params : ParamList	<< irx.NewParams(X[0], false) >>`,
		Id:         "Params",
		NTType:     32,
		Index:      79,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewParams(X[0], false)
		},
	},
	ProdTabEntry{
		String: `Params : ParamList "," "..."	<< irx.NewParams(X[0], true) >>`,
		Id:         "Params",
		NTType:     32,
		Index:      80,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewParams(X[0], true)
		},
	},
	ProdTabEntry{
		String: `ParamList : Param	<< irx.NewParamList(X[0]) >>`,
		Id:         "ParamList",
		NTType:     33,
		Index:      81,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewParamList(X[0])
		},
	},
	ProdTabEntry{
		String: `ParamList : ParamList "," Param	<< irx.AppendParam(X[0], X[2]) >>`,
		Id:         "ParamList",
		NTType:     33,
		Index:      82,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.AppendParam(X[0], X[2])
		},
	},
	ProdTabEntry{
		String: `Param : Type ParamAttrs	<< irx.NewParam(X[0], nil) >>`,
		Id:         "Param",
		NTType:     34,
		Index:      83,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewParam(X[0], nil)
		},
	},
	ProdTabEntry{
		String: `Param : Type ParamAttrs Local	<< irx.NewParam(X[0], X[2]) >>`,
		Id:         "Param",
		NTType:     34,
		Index:      84,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewParam(X[0], X[2])
		},
	},
	ProdTabEntry{
		String: `ParamAttrs : empty	<<  >>`,
		Id:         "ParamAttrs",
		NTType:     35,
		Index:      85,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `ParamAttrs : ParamAttrList	<<  >>`,
		Id:         "ParamAttrs",
		NTType:     35,
		Index:      86,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ParamAttrList : ParamAttr	<<  >>`,
		Id:         "ParamAttrList",
		NTType:     36,
		Index:      87,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ParamAttrList : ParamAttrList ParamAttr	<<  >>`,
		Id:         "ParamAttrList",
		NTType:     36,
		Index:      88,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ParamAttr : ResultAttr	<<  >>`,
		Id:         "ParamAttr",
		NTType:     37,
		Index:      89,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ParamAttr : "byval"	<<  >>`,
		Id:         "ParamAttr",
		NTType:     37,
		Index:      90,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ParamAttr : "inalloca"	<<  >>`,
		Id:         "ParamAttr",
		NTType:     37,
		Index:      91,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ParamAttr : "nest"	<<  >>`,
		Id:         "ParamAttr",
		NTType:     37,
		Index:      92,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ParamAttr : "nocapture"	<<  >>`,
		Id:         "ParamAttr",
		NTType:     37,
		Index:      93,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ParamAttr : "readnone"	<<  >>`,
		Id:         "ParamAttr",
		NTType:     37,
		Index:      94,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ParamAttr : "readonly"	<<  >>`,
		Id:         "ParamAttr",
		NTType:     37,
		Index:      95,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ParamAttr : "returned"	<<  >>`,
		Id:         "ParamAttr",
		NTType:     37,
		Index:      96,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ParamAttr : "sret"	<<  >>`,
		Id:         "ParamAttr",
		NTType:     37,
		Index:      97,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ParamAttr : "swifterror"	<<  >>`,
		Id:         "ParamAttr",
		NTType:     37,
		Index:      98,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ParamAttr : "swiftself"	<<  >>`,
		Id:         "ParamAttr",
		NTType:     37,
		Index:      99,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `OptFuncAlignment : empty	<<  >>`,
		Id:         "OptFuncAlignment",
		NTType:     38,
		Index:      100,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OptFuncAlignment : Alignment	<<  >>`,
		Id:         "OptFuncAlignment",
		NTType:     38,
		Index:      101,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncBody : "{" BasicBlocks "}"	<< X[1], nil >>`,
		Id:         "FuncBody",
		NTType:     39,
		Index:      102,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[1], nil
		},
	},
	ProdTabEntry{
		String: `AttrGroupDef : "attributes" AttrGroup "=" "{" Attrs "}"	<<  >>`,
		Id:         "AttrGroupDef",
		NTType:     40,
		Index:      103,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `AttrGroup : attr_group_id	<<  >>`,
		Id:         "AttrGroup",
		NTType:     41,
		Index:      104,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attrs : empty	<<  >>`,
		Id:         "Attrs",
		NTType:     42,
		Index:      105,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `Attrs : AttrList	<<  >>`,
		Id:         "Attrs",
		NTType:     42,
		Index:      106,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `AttrList : Attr	<<  >>`,
		Id:         "AttrList",
		NTType:     43,
		Index:      107,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `AttrList : AttrList Attr	<<  >>`,
		Id:         "AttrList",
		NTType:     43,
		Index:      108,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : AttrGroup	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      109,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : string_lit	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      110,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : string_lit "=" string_lit	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      111,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : "alignstack" "(" int_lit ")"	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      112,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : "allocsize" "(" int_lit ")"	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      113,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : "allocsize" "(" int_lit "," int_lit ")"	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      114,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : "alwaysinline"	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      115,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : "argmemonly"	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      116,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : "builtin"	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      117,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : "cold"	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      118,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : "convergent"	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      119,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : "inaccessiblemem_or_argmemonly"	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      120,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : "inaccessiblememonly"	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      121,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : "inlinehint"	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      122,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : "jumptable"	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      123,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : "minsize"	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      124,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : "naked"	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      125,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : "nobuiltin"	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      126,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : "noduplicate"	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      127,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : "noimplicitfloat"	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      128,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : "noinline"	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      129,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : "nonlazybind"	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      130,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : "norecurse"	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      131,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : "noredzone"	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      132,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : "noreturn"	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      133,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : "nounwind"	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      134,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : "optnone"	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      135,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : "optsize"	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      136,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : "readnone"	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      137,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : "readonly"	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      138,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : "returns_twice"	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      139,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : "safestack"	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      140,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : "sanitize_address"	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      141,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : "sanitize_memory"	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      142,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : "sanitize_thread"	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      143,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : "ssp"	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      144,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : "sspreq"	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      145,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : "sspstrong"	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      146,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Attr : "uwtable"	<<  >>`,
		Id:         "Attr",
		NTType:     44,
		Index:      147,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `MetadataDef : metadata_name "=" NamedMetadataNode	<<  >>`,
		Id:         "MetadataDef",
		NTType:     45,
		Index:      148,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `MetadataDef : metadata_id "=" UnnamedMetadataNode	<<  >>`,
		Id:         "MetadataDef",
		NTType:     45,
		Index:      149,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `NamedMetadataNode : "!" "{" MetadataNodeIDs "}"	<<  >>`,
		Id:         "NamedMetadataNode",
		NTType:     46,
		Index:      150,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `MetadataNodeIDs : empty	<<  >>`,
		Id:         "MetadataNodeIDs",
		NTType:     47,
		Index:      151,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `MetadataNodeIDs : MetadataNodeIDList	<<  >>`,
		Id:         "MetadataNodeIDs",
		NTType:     47,
		Index:      152,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `MetadataNodeIDList : metadata_id	<<  >>`,
		Id:         "MetadataNodeIDList",
		NTType:     48,
		Index:      153,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `MetadataNodeIDList : MetadataNodeIDList "," metadata_id	<<  >>`,
		Id:         "MetadataNodeIDList",
		NTType:     48,
		Index:      154,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `UnnamedMetadataNode : "!" "{" MetadataNodes "}"	<<  >>`,
		Id:         "UnnamedMetadataNode",
		NTType:     49,
		Index:      155,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `MetadataNodes : empty	<<  >>`,
		Id:         "MetadataNodes",
		NTType:     50,
		Index:      156,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `MetadataNodes : MetadataNodeList	<<  >>`,
		Id:         "MetadataNodes",
		NTType:     50,
		Index:      157,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `MetadataNodeList : MetadataNode	<<  >>`,
		Id:         "MetadataNodeList",
		NTType:     51,
		Index:      158,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `MetadataNodeList : MetadataNodeList "," MetadataNode	<<  >>`,
		Id:         "MetadataNodeList",
		NTType:     51,
		Index:      159,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `MetadataNode : "!" string_lit	<<  >>`,
		Id:         "MetadataNode",
		NTType:     52,
		Index:      160,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `MetadataNode : Type Value	<<  >>`,
		Id:         "MetadataNode",
		NTType:     52,
		Index:      161,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `MetadataNode : metadata_id	<<  >>`,
		Id:         "MetadataNode",
		NTType:     52,
		Index:      162,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `MetadataNode : UnnamedMetadataNode	<<  >>`,
		Id:         "MetadataNode",
		NTType:     52,
		Index:      163,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `MetadataNode : NullPointerConst	<<  >>`,
		Id:         "MetadataNode",
		NTType:     52,
		Index:      164,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Type : IntType	<<  >>`,
		Id:         "Type",
		NTType:     53,
		Index:      165,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Type : PointerType	<<  >>`,
		Id:         "Type",
		NTType:     53,
		Index:      166,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Type : ArrayType	<<  >>`,
		Id:         "Type",
		NTType:     53,
		Index:      167,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Type : StructType	<<  >>`,
		Id:         "Type",
		NTType:     53,
		Index:      168,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Type : FuncType	<<  >>`,
		Id:         "Type",
		NTType:     53,
		Index:      169,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Type : UserType	<<  >>`,
		Id:         "Type",
		NTType:     53,
		Index:      170,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ResultType : VoidType	<<  >>`,
		Id:         "ResultType",
		NTType:     54,
		Index:      171,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ResultType : Type	<<  >>`,
		Id:         "ResultType",
		NTType:     54,
		Index:      172,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `VoidType : "void"	<< types.NewVoid(), nil >>`,
		Id:         "VoidType",
		NTType:     55,
		Index:      173,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return types.NewVoid(), nil
		},
	},
	ProdTabEntry{
		String: `LabelType : "label"	<< types.NewLabel(), nil >>`,
		Id:         "LabelType",
		NTType:     56,
		Index:      174,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return types.NewLabel(), nil
		},
	},
	ProdTabEntry{
		String: `IntType : int_type	<< irx.NewIntType(X[0]) >>`,
		Id:         "IntType",
		NTType:     57,
		Index:      175,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewIntType(X[0])
		},
	},
	ProdTabEntry{
		String: `PointerType : Type "*"	<< irx.NewPointerType(X[0]) >>`,
		Id:         "PointerType",
		NTType:     58,
		Index:      176,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewPointerType(X[0])
		},
	},
	ProdTabEntry{
		String: `ArrayType : "[" int_lit "x" Type "]"	<< irx.NewArrayType(X[1], X[3]) >>`,
		Id:         "ArrayType",
		NTType:     59,
		Index:      177,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewArrayType(X[1], X[3])
		},
	},
	ProdTabEntry{
		String: `StructType : "{" Fields "}"	<< irx.NewStructType(X[1], false) >>`,
		Id:         "StructType",
		NTType:     60,
		Index:      178,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewStructType(X[1], false)
		},
	},
	ProdTabEntry{
		String: `StructType : "<" "{" Fields "}" ">"	<< irx.NewStructType(X[2], true) >>`,
		Id:         "StructType",
		NTType:     60,
		Index:      179,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewStructType(X[2], true)
		},
	},
	ProdTabEntry{
		String: `Fields : empty	<<  >>`,
		Id:         "Fields",
		NTType:     61,
		Index:      180,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `Fields : FieldList	<<  >>`,
		Id:         "Fields",
		NTType:     61,
		Index:      181,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FieldList : Field	<< irx.NewFieldList(X[0]) >>`,
		Id:         "FieldList",
		NTType:     62,
		Index:      182,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewFieldList(X[0])
		},
	},
	ProdTabEntry{
		String: `FieldList : FieldList "," Field	<< irx.AppendField(X[0], X[2]) >>`,
		Id:         "FieldList",
		NTType:     62,
		Index:      183,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.AppendField(X[0], X[2])
		},
	},
	ProdTabEntry{
		String: `Field : Type	<<  >>`,
		Id:         "Field",
		NTType:     63,
		Index:      184,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FuncType : ResultType "(" Params ")"	<< irx.NewFuncType(X[0], X[2]) >>`,
		Id:         "FuncType",
		NTType:     64,
		Index:      185,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewFuncType(X[0], X[2])
		},
	},
	ProdTabEntry{
		String: `UserType : Local	<<  >>`,
		Id:         "UserType",
		NTType:     65,
		Index:      186,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Local : local	<< irx.NewLocalDummy(X[0]) >>`,
		Id:         "Local",
		NTType:     66,
		Index:      187,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewLocalDummy(X[0])
		},
	},
	ProdTabEntry{
		String: `Value : Local	<<  >>`,
		Id:         "Value",
		NTType:     67,
		Index:      188,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Value : Constant	<<  >>`,
		Id:         "Value",
		NTType:     67,
		Index:      189,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Constant : BoolConst	<<  >>`,
		Id:         "Constant",
		NTType:     68,
		Index:      190,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Constant : IntConst	<<  >>`,
		Id:         "Constant",
		NTType:     68,
		Index:      191,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Constant : NullPointerConst	<<  >>`,
		Id:         "Constant",
		NTType:     68,
		Index:      192,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Constant : ArrayConst	<<  >>`,
		Id:         "Constant",
		NTType:     68,
		Index:      193,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Constant : ZeroInitializer	<<  >>`,
		Id:         "Constant",
		NTType:     68,
		Index:      194,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Constant : Global	<<  >>`,
		Id:         "Constant",
		NTType:     68,
		Index:      195,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Constant : ConstExpr	<<  >>`,
		Id:         "Constant",
		NTType:     68,
		Index:      196,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `BoolConst : "false"	<< irx.NewIntConst(X[0]) >>`,
		Id:         "BoolConst",
		NTType:     69,
		Index:      197,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewIntConst(X[0])
		},
	},
	ProdTabEntry{
		String: `BoolConst : "true"	<< irx.NewIntConst(X[0]) >>`,
		Id:         "BoolConst",
		NTType:     69,
		Index:      198,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewIntConst(X[0])
		},
	},
	ProdTabEntry{
		String: `IntConst : int_lit	<< irx.NewIntConst(X[0]) >>`,
		Id:         "IntConst",
		NTType:     70,
		Index:      199,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewIntConst(X[0])
		},
	},
	ProdTabEntry{
		String: `NullPointerConst : "null"	<< &irx.NullPointerConst{}, nil >>`,
		Id:         "NullPointerConst",
		NTType:     71,
		Index:      200,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return &irx.NullPointerConst{}, nil
		},
	},
	ProdTabEntry{
		String: `ArrayConst : CharArrayConst	<<  >>`,
		Id:         "ArrayConst",
		NTType:     72,
		Index:      201,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `CharArrayConst : "c" string_lit	<< irx.NewCharArrayConst(X[1]) >>`,
		Id:         "CharArrayConst",
		NTType:     73,
		Index:      202,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewCharArrayConst(X[1])
		},
	},
	ProdTabEntry{
		String: `ZeroInitializer : "zeroinitializer"	<< &irx.ZeroInitializer{}, nil >>`,
		Id:         "ZeroInitializer",
		NTType:     74,
		Index:      203,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return &irx.ZeroInitializer{}, nil
		},
	},
	ProdTabEntry{
		String: `Global : globalx	<< irx.NewGlobal(X[0]) >>`,
		Id:         "Global",
		NTType:     75,
		Index:      204,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewGlobal(X[0])
		},
	},
	ProdTabEntry{
		String: `ConstExpr : GetelementptrExpr	<<  >>`,
		Id:         "ConstExpr",
		NTType:     76,
		Index:      205,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `GetelementptrExpr : "getelementptr" OptInbounds "(" ElemType "," PointerType Addr ElemIndices ")"	<< irx.NewGetElementPtrExpr(X[3], X[5], X[6], X[7]) >>`,
		Id:         "GetelementptrExpr",
		NTType:     77,
		Index:      206,
		NumSymbols: 9,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewGetElementPtrExpr(X[3], X[5], X[6], X[7])
		},
	},
	ProdTabEntry{
		String: `BasicBlocks : empty	<<  >>`,
		Id:         "BasicBlocks",
		NTType:     78,
		Index:      207,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `BasicBlocks : BasicBlockList	<<  >>`,
		Id:         "BasicBlocks",
		NTType:     78,
		Index:      208,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `BasicBlockList : BasicBlock	<< irx.NewBasicBlockList(X[0]) >>`,
		Id:         "BasicBlockList",
		NTType:     79,
		Index:      209,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewBasicBlockList(X[0])
		},
	},
	ProdTabEntry{
		String: `BasicBlockList : BasicBlockList BasicBlock	<< irx.AppendBasicBlock(X[0], X[1]) >>`,
		Id:         "BasicBlockList",
		NTType:     79,
		Index:      210,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.AppendBasicBlock(X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `BasicBlock : Instructions Terminator	<< irx.NewBasicBlock(nil, X[0], X[1]) >>`,
		Id:         "BasicBlock",
		NTType:     80,
		Index:      211,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewBasicBlock(nil, X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `BasicBlock : labelx Instructions Terminator	<< irx.NewBasicBlock(X[0], X[1], X[2]) >>`,
		Id:         "BasicBlock",
		NTType:     80,
		Index:      212,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewBasicBlock(X[0], X[1], X[2])
		},
	},
	ProdTabEntry{
		String: `Instructions : empty	<<  >>`,
		Id:         "Instructions",
		NTType:     81,
		Index:      213,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `Instructions : InstructionList	<<  >>`,
		Id:         "Instructions",
		NTType:     81,
		Index:      214,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `InstructionList : Instruction	<< irx.NewInstructionList(X[0]) >>`,
		Id:         "InstructionList",
		NTType:     82,
		Index:      215,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewInstructionList(X[0])
		},
	},
	ProdTabEntry{
		String: `InstructionList : InstructionList Instruction	<< irx.AppendInstruction(X[0], X[1]) >>`,
		Id:         "InstructionList",
		NTType:     82,
		Index:      216,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.AppendInstruction(X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `Instruction : StmtInst	<<  >>`,
		Id:         "Instruction",
		NTType:     83,
		Index:      217,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Instruction : LocalVarDef	<<  >>`,
		Id:         "Instruction",
		NTType:     83,
		Index:      218,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `StmtInst : StoreInst	<<  >>`,
		Id:         "StmtInst",
		NTType:     84,
		Index:      219,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `LocalVarDef : ValueInst	<< irx.NewLocalVarDef(nil, X[0]) >>`,
		Id:         "LocalVarDef",
		NTType:     85,
		Index:      220,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewLocalVarDef(nil, X[0])
		},
	},
	ProdTabEntry{
		String: `LocalVarDef : Local "=" ValueInst	<< irx.NewLocalVarDef(X[0], X[2]) >>`,
		Id:         "LocalVarDef",
		NTType:     85,
		Index:      221,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewLocalVarDef(X[0], X[2])
		},
	},
	ProdTabEntry{
		String: `ValueInst : AddInst	<<  >>`,
		Id:         "ValueInst",
		NTType:     86,
		Index:      222,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInst : FaddInst	<<  >>`,
		Id:         "ValueInst",
		NTType:     86,
		Index:      223,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInst : SubInst	<<  >>`,
		Id:         "ValueInst",
		NTType:     86,
		Index:      224,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInst : FsubInst	<<  >>`,
		Id:         "ValueInst",
		NTType:     86,
		Index:      225,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInst : MulInst	<<  >>`,
		Id:         "ValueInst",
		NTType:     86,
		Index:      226,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInst : FmulInst	<<  >>`,
		Id:         "ValueInst",
		NTType:     86,
		Index:      227,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInst : UdivInst	<<  >>`,
		Id:         "ValueInst",
		NTType:     86,
		Index:      228,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInst : SdivInst	<<  >>`,
		Id:         "ValueInst",
		NTType:     86,
		Index:      229,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInst : FdivInst	<<  >>`,
		Id:         "ValueInst",
		NTType:     86,
		Index:      230,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInst : UremInst	<<  >>`,
		Id:         "ValueInst",
		NTType:     86,
		Index:      231,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInst : SremInst	<<  >>`,
		Id:         "ValueInst",
		NTType:     86,
		Index:      232,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInst : FremInst	<<  >>`,
		Id:         "ValueInst",
		NTType:     86,
		Index:      233,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInst : ShlInst	<<  >>`,
		Id:         "ValueInst",
		NTType:     86,
		Index:      234,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInst : LshrInst	<<  >>`,
		Id:         "ValueInst",
		NTType:     86,
		Index:      235,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInst : AshrInst	<<  >>`,
		Id:         "ValueInst",
		NTType:     86,
		Index:      236,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInst : AndInst	<<  >>`,
		Id:         "ValueInst",
		NTType:     86,
		Index:      237,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInst : OrInst	<<  >>`,
		Id:         "ValueInst",
		NTType:     86,
		Index:      238,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInst : XorInst	<<  >>`,
		Id:         "ValueInst",
		NTType:     86,
		Index:      239,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInst : AllocaInst	<<  >>`,
		Id:         "ValueInst",
		NTType:     86,
		Index:      240,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInst : LoadInst	<<  >>`,
		Id:         "ValueInst",
		NTType:     86,
		Index:      241,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInst : GetelementptrInst	<<  >>`,
		Id:         "ValueInst",
		NTType:     86,
		Index:      242,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInst : TruncInst	<<  >>`,
		Id:         "ValueInst",
		NTType:     86,
		Index:      243,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInst : ZextInst	<<  >>`,
		Id:         "ValueInst",
		NTType:     86,
		Index:      244,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInst : SextInst	<<  >>`,
		Id:         "ValueInst",
		NTType:     86,
		Index:      245,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInst : FptruncInst	<<  >>`,
		Id:         "ValueInst",
		NTType:     86,
		Index:      246,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInst : FpextInst	<<  >>`,
		Id:         "ValueInst",
		NTType:     86,
		Index:      247,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInst : FptouiInst	<<  >>`,
		Id:         "ValueInst",
		NTType:     86,
		Index:      248,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInst : FptosiInst	<<  >>`,
		Id:         "ValueInst",
		NTType:     86,
		Index:      249,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInst : UitofpInst	<<  >>`,
		Id:         "ValueInst",
		NTType:     86,
		Index:      250,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInst : SitofpInst	<<  >>`,
		Id:         "ValueInst",
		NTType:     86,
		Index:      251,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInst : PtrtointInst	<<  >>`,
		Id:         "ValueInst",
		NTType:     86,
		Index:      252,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInst : InttoptrInst	<<  >>`,
		Id:         "ValueInst",
		NTType:     86,
		Index:      253,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInst : BitcastInst	<<  >>`,
		Id:         "ValueInst",
		NTType:     86,
		Index:      254,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInst : AddrspacecastInst	<<  >>`,
		Id:         "ValueInst",
		NTType:     86,
		Index:      255,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInst : IcmpInst	<<  >>`,
		Id:         "ValueInst",
		NTType:     86,
		Index:      256,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInst : PhiInst	<<  >>`,
		Id:         "ValueInst",
		NTType:     86,
		Index:      257,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInst : SelectInst	<<  >>`,
		Id:         "ValueInst",
		NTType:     86,
		Index:      258,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ValueInst : CallInst	<<  >>`,
		Id:         "ValueInst",
		NTType:     86,
		Index:      259,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Terminator : RetInst	<<  >>`,
		Id:         "Terminator",
		NTType:     87,
		Index:      260,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Terminator : BrInst	<<  >>`,
		Id:         "Terminator",
		NTType:     87,
		Index:      261,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Terminator : UnreachableInst	<<  >>`,
		Id:         "Terminator",
		NTType:     87,
		Index:      262,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `RetInst : "ret" VoidType	<< instruction.NewRet(types.NewVoid(), nil) >>`,
		Id:         "RetInst",
		NTType:     88,
		Index:      263,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return instruction.NewRet(types.NewVoid(), nil)
		},
	},
	ProdTabEntry{
		String: `RetInst : "ret" Type Value	<< irx.NewRetInst(X[1], X[2]) >>`,
		Id:         "RetInst",
		NTType:     88,
		Index:      264,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewRetInst(X[1], X[2])
		},
	},
	ProdTabEntry{
		String: `BrInst : "br" LabelType TargetBranch	<< irx.NewJmpInst(X[2]) >>`,
		Id:         "BrInst",
		NTType:     89,
		Index:      265,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewJmpInst(X[2])
		},
	},
	ProdTabEntry{
		String: `BrInst : "br" IntType Cond "," LabelType TrueBranch "," LabelType FalseBranch	<< irx.NewBrInst(X[1], X[2], X[5], X[8]) >>`,
		Id:         "BrInst",
		NTType:     89,
		Index:      266,
		NumSymbols: 9,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewBrInst(X[1], X[2], X[5], X[8])
		},
	},
	ProdTabEntry{
		String: `TargetBranch : Local	<<  >>`,
		Id:         "TargetBranch",
		NTType:     90,
		Index:      267,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Cond : Value	<<  >>`,
		Id:         "Cond",
		NTType:     91,
		Index:      268,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `TrueBranch : Local	<<  >>`,
		Id:         "TrueBranch",
		NTType:     92,
		Index:      269,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FalseBranch : Local	<<  >>`,
		Id:         "FalseBranch",
		NTType:     93,
		Index:      270,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `UnreachableInst : "unreachable"	<< &instruction.Unreachable{}, nil >>`,
		Id:         "UnreachableInst",
		NTType:     94,
		Index:      271,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return &instruction.Unreachable{}, nil
		},
	},
	ProdTabEntry{
		String: `AddInst : "add" OptWrapFlags Type Value "," Value	<< irx.NewAddInst(X[2], X[3], X[5]) >>`,
		Id:         "AddInst",
		NTType:     95,
		Index:      272,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewAddInst(X[2], X[3], X[5])
		},
	},
	ProdTabEntry{
		String: `OptWrapFlags : empty	<<  >>`,
		Id:         "OptWrapFlags",
		NTType:     96,
		Index:      273,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OptWrapFlags : "nsw"	<<  >>`,
		Id:         "OptWrapFlags",
		NTType:     96,
		Index:      274,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `OptWrapFlags : "nuw"	<<  >>`,
		Id:         "OptWrapFlags",
		NTType:     96,
		Index:      275,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `OptWrapFlags : "nsw" "nuw"	<<  >>`,
		Id:         "OptWrapFlags",
		NTType:     96,
		Index:      276,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `OptWrapFlags : "nuw" "nsw"	<<  >>`,
		Id:         "OptWrapFlags",
		NTType:     96,
		Index:      277,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `FaddInst : "fadd" Type Value "," Value	<< irx.NewFAddInst(X[1], X[2], X[4]) >>`,
		Id:         "FaddInst",
		NTType:     97,
		Index:      278,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewFAddInst(X[1], X[2], X[4])
		},
	},
	ProdTabEntry{
		String: `SubInst : "sub" OptWrapFlags Type Value "," Value	<< irx.NewSubInst(X[2], X[3], X[5]) >>`,
		Id:         "SubInst",
		NTType:     98,
		Index:      279,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewSubInst(X[2], X[3], X[5])
		},
	},
	ProdTabEntry{
		String: `FsubInst : "fsub" Type Value "," Value	<< irx.NewFSubInst(X[1], X[2], X[4]) >>`,
		Id:         "FsubInst",
		NTType:     99,
		Index:      280,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewFSubInst(X[1], X[2], X[4])
		},
	},
	ProdTabEntry{
		String: `MulInst : "mul" OptWrapFlags Type Value "," Value	<< irx.NewMulInst(X[2], X[3], X[5]) >>`,
		Id:         "MulInst",
		NTType:     100,
		Index:      281,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewMulInst(X[2], X[3], X[5])
		},
	},
	ProdTabEntry{
		String: `FmulInst : "fmul" Type Value "," Value	<< irx.NewFMulInst(X[1], X[2], X[4]) >>`,
		Id:         "FmulInst",
		NTType:     101,
		Index:      282,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewFMulInst(X[1], X[2], X[4])
		},
	},
	ProdTabEntry{
		String: `UdivInst : "udiv" OptExact Type Value "," Value	<< irx.NewUDivInst(X[2], X[3], X[5]) >>`,
		Id:         "UdivInst",
		NTType:     102,
		Index:      283,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewUDivInst(X[2], X[3], X[5])
		},
	},
	ProdTabEntry{
		String: `OptExact : empty	<<  >>`,
		Id:         "OptExact",
		NTType:     103,
		Index:      284,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OptExact : "exact"	<<  >>`,
		Id:         "OptExact",
		NTType:     103,
		Index:      285,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `SdivInst : "sdiv" OptExact Type Value "," Value	<< irx.NewSDivInst(X[2], X[3], X[5]) >>`,
		Id:         "SdivInst",
		NTType:     104,
		Index:      286,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewSDivInst(X[2], X[3], X[5])
		},
	},
	ProdTabEntry{
		String: `FdivInst : "fdiv" OptExact Type Value "," Value	<< irx.NewFDivInst(X[2], X[3], X[5]) >>`,
		Id:         "FdivInst",
		NTType:     105,
		Index:      287,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewFDivInst(X[2], X[3], X[5])
		},
	},
	ProdTabEntry{
		String: `UremInst : "urem" OptExact Type Value "," Value	<< irx.NewURemInst(X[2], X[3], X[5]) >>`,
		Id:         "UremInst",
		NTType:     106,
		Index:      288,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewURemInst(X[2], X[3], X[5])
		},
	},
	ProdTabEntry{
		String: `SremInst : "srem" OptExact Type Value "," Value	<< irx.NewSRemInst(X[2], X[3], X[5]) >>`,
		Id:         "SremInst",
		NTType:     107,
		Index:      289,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewSRemInst(X[2], X[3], X[5])
		},
	},
	ProdTabEntry{
		String: `FremInst : "frem" OptExact Type Value "," Value	<< irx.NewFRemInst(X[2], X[3], X[5]) >>`,
		Id:         "FremInst",
		NTType:     108,
		Index:      290,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewFRemInst(X[2], X[3], X[5])
		},
	},
	ProdTabEntry{
		String: `ShlInst : "shl" Type Value "," Value	<< irx.NewShLInst(X[1], X[2], X[4]) >>`,
		Id:         "ShlInst",
		NTType:     109,
		Index:      291,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewShLInst(X[1], X[2], X[4])
		},
	},
	ProdTabEntry{
		String: `LshrInst : "lshr" Type Value "," Value	<< irx.NewLShRInst(X[1], X[2], X[4]) >>`,
		Id:         "LshrInst",
		NTType:     110,
		Index:      292,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewLShRInst(X[1], X[2], X[4])
		},
	},
	ProdTabEntry{
		String: `AshrInst : "ashr" Type Value "," Value	<< irx.NewAShRInst(X[1], X[2], X[4]) >>`,
		Id:         "AshrInst",
		NTType:     111,
		Index:      293,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewAShRInst(X[1], X[2], X[4])
		},
	},
	ProdTabEntry{
		String: `AndInst : "and" Type Value "," Value	<< irx.NewAndInst(X[1], X[2], X[4]) >>`,
		Id:         "AndInst",
		NTType:     112,
		Index:      294,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewAndInst(X[1], X[2], X[4])
		},
	},
	ProdTabEntry{
		String: `OrInst : "or" Type Value "," Value	<< irx.NewOrInst(X[1], X[2], X[4]) >>`,
		Id:         "OrInst",
		NTType:     113,
		Index:      295,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewOrInst(X[1], X[2], X[4])
		},
	},
	ProdTabEntry{
		String: `XorInst : "xor" Type Value "," Value	<< irx.NewXorInst(X[1], X[2], X[4]) >>`,
		Id:         "XorInst",
		NTType:     114,
		Index:      296,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewXorInst(X[1], X[2], X[4])
		},
	},
	ProdTabEntry{
		String: `AllocaInst : "alloca" Type OptAlignment	<< irx.NewAllocaInst(X[1], 1) >>`,
		Id:         "AllocaInst",
		NTType:     115,
		Index:      297,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewAllocaInst(X[1], 1)
		},
	},
	ProdTabEntry{
		String: `LoadInst : "load" Type "," PointerType Addr OptAlignment	<< irx.NewLoadInst(X[1], X[3], X[4]) >>`,
		Id:         "LoadInst",
		NTType:     116,
		Index:      298,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewLoadInst(X[1], X[3], X[4])
		},
	},
	ProdTabEntry{
		String: `Addr : Value	<<  >>`,
		Id:         "Addr",
		NTType:     117,
		Index:      299,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `StoreInst : "store" Type Value "," PointerType Addr OptAlignment	<< irx.NewStoreInst(X[1], X[2], X[4], X[5]) >>`,
		Id:         "StoreInst",
		NTType:     118,
		Index:      300,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewStoreInst(X[1], X[2], X[4], X[5])
		},
	},
	ProdTabEntry{
		String: `GetelementptrInst : "getelementptr" OptInbounds ElemType "," PointerType Addr ElemIndices	<< irx.NewGetElementPtrInst(X[2], X[4], X[5], X[6]) >>`,
		Id:         "GetelementptrInst",
		NTType:     119,
		Index:      301,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewGetElementPtrInst(X[2], X[4], X[5], X[6])
		},
	},
	ProdTabEntry{
		String: `OptInbounds : empty	<<  >>`,
		Id:         "OptInbounds",
		NTType:     120,
		Index:      302,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `OptInbounds : "inbounds"	<<  >>`,
		Id:         "OptInbounds",
		NTType:     120,
		Index:      303,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ElemType : Type	<<  >>`,
		Id:         "ElemType",
		NTType:     121,
		Index:      304,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ElemIndices : empty	<<  >>`,
		Id:         "ElemIndices",
		NTType:     122,
		Index:      305,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `ElemIndices : ElemIndexList	<<  >>`,
		Id:         "ElemIndices",
		NTType:     122,
		Index:      306,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ElemIndexList : ElemIndex	<< irx.NewValueList(X[0]) >>`,
		Id:         "ElemIndexList",
		NTType:     123,
		Index:      307,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewValueList(X[0])
		},
	},
	ProdTabEntry{
		String: `ElemIndexList : ElemIndexList ElemIndex	<< irx.AppendValue(X[0], X[1]) >>`,
		Id:         "ElemIndexList",
		NTType:     123,
		Index:      308,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.AppendValue(X[0], X[1])
		},
	},
	ProdTabEntry{
		String: `ElemIndex : "," IntType Value	<< irx.NewValue(X[1], X[2]) >>`,
		Id:         "ElemIndex",
		NTType:     124,
		Index:      309,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewValue(X[1], X[2])
		},
	},
	ProdTabEntry{
		String: `TruncInst : "trunc" FromType Value "to" ToType	<< irx.NewTruncInst(X[1], X[2], X[4]) >>`,
		Id:         "TruncInst",
		NTType:     125,
		Index:      310,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewTruncInst(X[1], X[2], X[4])
		},
	},
	ProdTabEntry{
		String: `FromType : Type	<<  >>`,
		Id:         "FromType",
		NTType:     126,
		Index:      311,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ToType : Type	<<  >>`,
		Id:         "ToType",
		NTType:     127,
		Index:      312,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ZextInst : "zext" FromType Value "to" ToType	<< irx.NewZExtInst(X[1], X[2], X[4]) >>`,
		Id:         "ZextInst",
		NTType:     128,
		Index:      313,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewZExtInst(X[1], X[2], X[4])
		},
	},
	ProdTabEntry{
		String: `SextInst : "sext" FromType Value "to" ToType	<< irx.NewSExtInst(X[1], X[2], X[4]) >>`,
		Id:         "SextInst",
		NTType:     129,
		Index:      314,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewSExtInst(X[1], X[2], X[4])
		},
	},
	ProdTabEntry{
		String: `FptruncInst : "fptrunc" FromType Value "to" ToType	<< irx.NewFPTruncInst(X[1], X[2], X[4]) >>`,
		Id:         "FptruncInst",
		NTType:     130,
		Index:      315,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewFPTruncInst(X[1], X[2], X[4])
		},
	},
	ProdTabEntry{
		String: `FpextInst : "fpext" FromType Value "to" ToType	<< irx.NewFPExtInst(X[1], X[2], X[4]) >>`,
		Id:         "FpextInst",
		NTType:     131,
		Index:      316,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewFPExtInst(X[1], X[2], X[4])
		},
	},
	ProdTabEntry{
		String: `FptouiInst : "fptoui" FromType Value "to" ToType	<< irx.NewFPToUIInst(X[1], X[2], X[4]) >>`,
		Id:         "FptouiInst",
		NTType:     132,
		Index:      317,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewFPToUIInst(X[1], X[2], X[4])
		},
	},
	ProdTabEntry{
		String: `FptosiInst : "fptosi" FromType Value "to" ToType	<< irx.NewFPToSIInst(X[1], X[2], X[4]) >>`,
		Id:         "FptosiInst",
		NTType:     133,
		Index:      318,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewFPToSIInst(X[1], X[2], X[4])
		},
	},
	ProdTabEntry{
		String: `UitofpInst : "uitofp" FromType Value "to" ToType	<< irx.NewUIToFPInst(X[1], X[2], X[4]) >>`,
		Id:         "UitofpInst",
		NTType:     134,
		Index:      319,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewUIToFPInst(X[1], X[2], X[4])
		},
	},
	ProdTabEntry{
		String: `SitofpInst : "sitofp" FromType Value "to" ToType	<< irx.NewSIToFPInst(X[1], X[2], X[4]) >>`,
		Id:         "SitofpInst",
		NTType:     135,
		Index:      320,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewSIToFPInst(X[1], X[2], X[4])
		},
	},
	ProdTabEntry{
		String: `PtrtointInst : "ptrtoint" FromType Value "to" ToType	<< irx.NewPtrToIntInst(X[1], X[2], X[4]) >>`,
		Id:         "PtrtointInst",
		NTType:     136,
		Index:      321,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewPtrToIntInst(X[1], X[2], X[4])
		},
	},
	ProdTabEntry{
		String: `InttoptrInst : "inttoptr" FromType Value "to" ToType	<< irx.NewIntToPtrInst(X[1], X[2], X[4]) >>`,
		Id:         "InttoptrInst",
		NTType:     137,
		Index:      322,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewIntToPtrInst(X[1], X[2], X[4])
		},
	},
	ProdTabEntry{
		String: `BitcastInst : "bitcast" FromType Value "to" ToType	<< irx.NewBitCastInst(X[1], X[2], X[4]) >>`,
		Id:         "BitcastInst",
		NTType:     138,
		Index:      323,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewBitCastInst(X[1], X[2], X[4])
		},
	},
	ProdTabEntry{
		String: `AddrspacecastInst : "addrspacecast" FromType Value "to" ToType	<< irx.NewAddrSpaceCastInst(X[1], X[2], X[4]) >>`,
		Id:         "AddrspacecastInst",
		NTType:     139,
		Index:      324,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewAddrSpaceCastInst(X[1], X[2], X[4])
		},
	},
	ProdTabEntry{
		String: `IcmpInst : "icmp" ICond Type Value "," Value	<< irx.NewICmpInst(X[1], X[2], X[3], X[5]) >>`,
		Id:         "IcmpInst",
		NTType:     140,
		Index:      325,
		NumSymbols: 6,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewICmpInst(X[1], X[2], X[3], X[5])
		},
	},
	ProdTabEntry{
		String: `ICond : "eq"	<< instruction.ICondEq, nil >>`,
		Id:         "ICond",
		NTType:     141,
		Index:      326,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return instruction.ICondEq, nil
		},
	},
	ProdTabEntry{
		String: `ICond : "ne"	<< instruction.ICondNE, nil >>`,
		Id:         "ICond",
		NTType:     141,
		Index:      327,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return instruction.ICondNE, nil
		},
	},
	ProdTabEntry{
		String: `ICond : "ugt"	<< instruction.ICondUGT, nil >>`,
		Id:         "ICond",
		NTType:     141,
		Index:      328,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return instruction.ICondUGT, nil
		},
	},
	ProdTabEntry{
		String: `ICond : "uge"	<< instruction.ICondUGE, nil >>`,
		Id:         "ICond",
		NTType:     141,
		Index:      329,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return instruction.ICondUGE, nil
		},
	},
	ProdTabEntry{
		String: `ICond : "ult"	<< instruction.ICondULT, nil >>`,
		Id:         "ICond",
		NTType:     141,
		Index:      330,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return instruction.ICondULT, nil
		},
	},
	ProdTabEntry{
		String: `ICond : "ule"	<< instruction.ICondULE, nil >>`,
		Id:         "ICond",
		NTType:     141,
		Index:      331,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return instruction.ICondULE, nil
		},
	},
	ProdTabEntry{
		String: `ICond : "sgt"	<< instruction.ICondSGT, nil >>`,
		Id:         "ICond",
		NTType:     141,
		Index:      332,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return instruction.ICondSGT, nil
		},
	},
	ProdTabEntry{
		String: `ICond : "sge"	<< instruction.ICondSGE, nil >>`,
		Id:         "ICond",
		NTType:     141,
		Index:      333,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return instruction.ICondSGE, nil
		},
	},
	ProdTabEntry{
		String: `ICond : "slt"	<< instruction.ICondSLT, nil >>`,
		Id:         "ICond",
		NTType:     141,
		Index:      334,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return instruction.ICondSLT, nil
		},
	},
	ProdTabEntry{
		String: `ICond : "sle"	<< instruction.ICondSLE, nil >>`,
		Id:         "ICond",
		NTType:     141,
		Index:      335,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return instruction.ICondSLE, nil
		},
	},
	ProdTabEntry{
		String: `PhiInst : "phi" Type IncomingValueList	<< irx.NewPHIInst(X[1], X[2]) >>`,
		Id:         "PhiInst",
		NTType:     142,
		Index:      336,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewPHIInst(X[1], X[2])
		},
	},
	ProdTabEntry{
		String: `IncomingValueList : IncomingValue	<< irx.NewIncomingList(X[0]) >>`,
		Id:         "IncomingValueList",
		NTType:     143,
		Index:      337,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewIncomingList(X[0])
		},
	},
	ProdTabEntry{
		String: `IncomingValueList : IncomingValueList "," IncomingValue	<< irx.AppendIncoming(X[0], X[2]) >>`,
		Id:         "IncomingValueList",
		NTType:     143,
		Index:      338,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.AppendIncoming(X[0], X[2])
		},
	},
	ProdTabEntry{
		String: `IncomingValue : "[" Value "," Predecessor "]"	<< irx.NewIncoming(X[1], X[3]) >>`,
		Id:         "IncomingValue",
		NTType:     144,
		Index:      339,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewIncoming(X[1], X[3])
		},
	},
	ProdTabEntry{
		String: `Predecessor : Local	<<  >>`,
		Id:         "Predecessor",
		NTType:     145,
		Index:      340,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `SelectInst : "select" Type Cond "," Type Value "," Type Value	<< irx.NewSelectInst(X[1], X[2], X[4], X[5], X[7], X[8]) >>`,
		Id:         "SelectInst",
		NTType:     146,
		Index:      341,
		NumSymbols: 9,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewSelectInst(X[1], X[2], X[4], X[5], X[7], X[8])
		},
	},
	ProdTabEntry{
		String: `CallInst : "call" Result FuncName "(" Args ")" Attrs	<< irx.NewCallInst(X[1], X[2], X[4]) >>`,
		Id:         "CallInst",
		NTType:     147,
		Index:      342,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewCallInst(X[1], X[2], X[4])
		},
	},
	ProdTabEntry{
		String: `Args : empty	<<  >>`,
		Id:         "Args",
		NTType:     148,
		Index:      343,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String: `Args : ArgList	<<  >>`,
		Id:         "Args",
		NTType:     148,
		Index:      344,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `ArgList : Arg	<< irx.NewValueList(X[0]) >>`,
		Id:         "ArgList",
		NTType:     149,
		Index:      345,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewValueList(X[0])
		},
	},
	ProdTabEntry{
		String: `ArgList : ArgList "," Arg	<< irx.AppendValue(X[0], X[2]) >>`,
		Id:         "ArgList",
		NTType:     149,
		Index:      346,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.AppendValue(X[0], X[2])
		},
	},
	ProdTabEntry{
		String: `Arg : Type ParamAttrs Value	<< irx.NewValue(X[0], X[2]) >>`,
		Id:         "Arg",
		NTType:     150,
		Index:      347,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib) (Attrib, error) {
			return irx.NewValue(X[0], X[2])
		},
	},
}
