// generated by gocc; DO NOT EDIT.

package lexer

import (

	// "fmt"
	// "github.com/llir/llvm/asm/internal/util"

	"io/ioutil"
	"unicode/utf8"

	"github.com/llir/llvm/asm/internal/token"
)

const (
	NoState    = -1
	NumStates  = 746
	NumSymbols = 1009
)

type Lexer struct {
	src    []byte
	pos    int
	line   int
	column int
}

func NewLexer(src []byte) *Lexer {
	lexer := &Lexer{
		src:    src,
		pos:    0,
		line:   1,
		column: 1,
	}
	return lexer
}

func NewLexerFile(fpath string) (*Lexer, error) {
	src, err := ioutil.ReadFile(fpath)
	if err != nil {
		return nil, err
	}
	return NewLexer(src), nil
}

func (this *Lexer) Scan() (tok *token.Token) {

	// fmt.Printf("Lexer.Scan() pos=%d\n", this.pos)

	tok = new(token.Token)
	if this.pos >= len(this.src) {
		tok.Type = token.EOF
		tok.Pos.Offset, tok.Pos.Line, tok.Pos.Column = this.pos, this.line, this.column
		return
	}
	start, end := this.pos, 0
	tok.Type = token.INVALID
	state, rune1, size := 0, rune(-1), 0
	for state != -1 {

		// fmt.Printf("\tpos=%d, line=%d, col=%d, state=%d\n", this.pos, this.line, this.column, state)

		if this.pos >= len(this.src) {
			rune1 = -1
		} else {
			rune1, size = utf8.DecodeRune(this.src[this.pos:])
			this.pos += size
		}
		switch rune1 {
		case '\n':
			this.line++
			this.column = 1
		case '\r':
			this.column = 1
		case '\t':
			this.column += 4
		default:
			this.column++
		}

		// Production start
		if rune1 != -1 {
			state = TransTab[state](rune1)
		} else {
			state = -1
		}
		// Production end

		// Debug start
		// nextState := -1
		// if rune1 != -1 {
		// 	nextState = TransTab[state](rune1)
		// }
		// fmt.Printf("\tS%d, : tok=%s, rune == %s(%x), next state == %d\n", state, token.TokMap.Id(tok.Type), util.RuneToString(rune1), rune1, nextState)
		// fmt.Printf("\t\tpos=%d, size=%d, start=%d, end=%d\n", this.pos, size, start, end)
		// if nextState != -1 {
		// 	fmt.Printf("\t\taction:%s\n", ActTab[nextState].String())
		// }
		// state = nextState
		// Debug end

		if state != -1 {
			switch {
			case ActTab[state].Accept != -1:
				tok.Type = ActTab[state].Accept
				// fmt.Printf("\t Accept(%s), %s(%d)\n", string(act), token.TokMap.Id(tok), tok)
				end = this.pos
			case ActTab[state].Ignore != "":
				// fmt.Printf("\t Ignore(%s)\n", string(act))
				start = this.pos
				state = 0
				if start >= len(this.src) {
					tok.Type = token.EOF
				}

			}
		} else {
			if tok.Type == token.INVALID {
				end = this.pos
			}
		}
	}
	if end > start {
		this.pos = end
		tok.Lit = this.src[start:end]
	} else {
		tok.Lit = []byte{}
	}
	tok.Pos.Offset = start
	tok.Pos.Column = this.column
	tok.Pos.Line = this.line
	return
}

func (this *Lexer) Reset() {
	this.pos = 0
}

/*
Lexer symbols:
0: '#'
1: '!'
2: '!'
3: ':'
4: ':'
5: 'i'
6: 't'
7: 'a'
8: 'r'
9: 'g'
10: 'e'
11: 't'
12: 'd'
13: 'a'
14: 't'
15: 'a'
16: 'l'
17: 'a'
18: 'y'
19: 'o'
20: 'u'
21: 't'
22: '='
23: 't'
24: 'r'
25: 'i'
26: 'p'
27: 'l'
28: 'e'
29: 't'
30: 'y'
31: 'p'
32: 'e'
33: 'a'
34: 'p'
35: 'p'
36: 'e'
37: 'n'
38: 'd'
39: 'i'
40: 'n'
41: 'g'
42: 'a'
43: 'v'
44: 'a'
45: 'i'
46: 'l'
47: 'a'
48: 'b'
49: 'l'
50: 'e'
51: '_'
52: 'e'
53: 'x'
54: 't'
55: 'e'
56: 'r'
57: 'n'
58: 'a'
59: 'l'
60: 'l'
61: 'y'
62: 'c'
63: 'o'
64: 'm'
65: 'm'
66: 'o'
67: 'n'
68: 'i'
69: 'n'
70: 't'
71: 'e'
72: 'r'
73: 'n'
74: 'a'
75: 'l'
76: 'l'
77: 'i'
78: 'n'
79: 'k'
80: 'o'
81: 'n'
82: 'c'
83: 'e'
84: 'l'
85: 'i'
86: 'n'
87: 'k'
88: 'o'
89: 'n'
90: 'c'
91: 'e'
92: '_'
93: 'o'
94: 'd'
95: 'r'
96: 'p'
97: 'r'
98: 'i'
99: 'v'
100: 'a'
101: 't'
102: 'e'
103: 'w'
104: 'e'
105: 'a'
106: 'k'
107: 'w'
108: 'e'
109: 'a'
110: 'k'
111: '_'
112: 'o'
113: 'd'
114: 'r'
115: 'e'
116: 'x'
117: 't'
118: 'e'
119: 'r'
120: 'n'
121: '_'
122: 'w'
123: 'e'
124: 'a'
125: 'k'
126: 'e'
127: 'x'
128: 't'
129: 'e'
130: 'r'
131: 'n'
132: 'a'
133: 'l'
134: 'u'
135: 'n'
136: 'n'
137: 'a'
138: 'm'
139: 'e'
140: 'd'
141: '_'
142: 'a'
143: 'd'
144: 'd'
145: 'r'
146: 'c'
147: 'o'
148: 'n'
149: 's'
150: 't'
151: 'a'
152: 'n'
153: 't'
154: 'g'
155: 'l'
156: 'o'
157: 'b'
158: 'a'
159: 'l'
160: ','
161: 'a'
162: 'l'
163: 'i'
164: 'g'
165: 'n'
166: 'd'
167: 'e'
168: 'c'
169: 'l'
170: 'a'
171: 'r'
172: 'e'
173: 'd'
174: 'e'
175: 'f'
176: 'i'
177: 'n'
178: 'e'
179: '('
180: ')'
181: 'd'
182: 'e'
183: 'r'
184: 'e'
185: 'f'
186: 'e'
187: 'r'
188: 'e'
189: 'n'
190: 'c'
191: 'e'
192: 'a'
193: 'b'
194: 'l'
195: 'e'
196: 'd'
197: 'e'
198: 'r'
199: 'e'
200: 'f'
201: 'e'
202: 'r'
203: 'e'
204: 'n'
205: 'c'
206: 'e'
207: 'a'
208: 'b'
209: 'l'
210: 'e'
211: '_'
212: 'o'
213: 'r'
214: '_'
215: 'n'
216: 'u'
217: 'l'
218: 'l'
219: 'i'
220: 'n'
221: 'r'
222: 'e'
223: 'g'
224: 'n'
225: 'o'
226: 'a'
227: 'l'
228: 'i'
229: 'a'
230: 's'
231: 'n'
232: 'o'
233: 'n'
234: 'n'
235: 'u'
236: 'l'
237: 'l'
238: 's'
239: 'i'
240: 'g'
241: 'n'
242: 'e'
243: 'x'
244: 't'
245: 'z'
246: 'e'
247: 'r'
248: 'o'
249: 'e'
250: 'x'
251: 't'
252: '.'
253: '.'
254: '.'
255: 'b'
256: 'y'
257: 'v'
258: 'a'
259: 'l'
260: 'i'
261: 'n'
262: 'a'
263: 'l'
264: 'l'
265: 'o'
266: 'c'
267: 'a'
268: 'n'
269: 'e'
270: 's'
271: 't'
272: 'n'
273: 'o'
274: 'c'
275: 'a'
276: 'p'
277: 't'
278: 'u'
279: 'r'
280: 'e'
281: 'r'
282: 'e'
283: 'a'
284: 'd'
285: 'n'
286: 'o'
287: 'n'
288: 'e'
289: 'r'
290: 'e'
291: 'a'
292: 'd'
293: 'o'
294: 'n'
295: 'l'
296: 'y'
297: 'r'
298: 'e'
299: 't'
300: 'u'
301: 'r'
302: 'n'
303: 'e'
304: 'd'
305: 's'
306: 'r'
307: 'e'
308: 't'
309: 's'
310: 'w'
311: 'i'
312: 'f'
313: 't'
314: 'e'
315: 'r'
316: 'r'
317: 'o'
318: 'r'
319: 's'
320: 'w'
321: 'i'
322: 'f'
323: 't'
324: 's'
325: 'e'
326: 'l'
327: 'f'
328: '{'
329: '}'
330: 'a'
331: 't'
332: 't'
333: 'r'
334: 'i'
335: 'b'
336: 'u'
337: 't'
338: 'e'
339: 's'
340: 'a'
341: 'l'
342: 'i'
343: 'g'
344: 'n'
345: 's'
346: 't'
347: 'a'
348: 'c'
349: 'k'
350: 'a'
351: 'l'
352: 'l'
353: 'o'
354: 'c'
355: 's'
356: 'i'
357: 'z'
358: 'e'
359: 'a'
360: 'l'
361: 'w'
362: 'a'
363: 'y'
364: 's'
365: 'i'
366: 'n'
367: 'l'
368: 'i'
369: 'n'
370: 'e'
371: 'a'
372: 'r'
373: 'g'
374: 'm'
375: 'e'
376: 'm'
377: 'o'
378: 'n'
379: 'l'
380: 'y'
381: 'b'
382: 'u'
383: 'i'
384: 'l'
385: 't'
386: 'i'
387: 'n'
388: 'c'
389: 'o'
390: 'l'
391: 'd'
392: 'c'
393: 'o'
394: 'n'
395: 'v'
396: 'e'
397: 'r'
398: 'g'
399: 'e'
400: 'n'
401: 't'
402: 'i'
403: 'n'
404: 'a'
405: 'c'
406: 'c'
407: 'e'
408: 's'
409: 's'
410: 'i'
411: 'b'
412: 'l'
413: 'e'
414: 'm'
415: 'e'
416: 'm'
417: '_'
418: 'o'
419: 'r'
420: '_'
421: 'a'
422: 'r'
423: 'g'
424: 'm'
425: 'e'
426: 'm'
427: 'o'
428: 'n'
429: 'l'
430: 'y'
431: 'i'
432: 'n'
433: 'a'
434: 'c'
435: 'c'
436: 'e'
437: 's'
438: 's'
439: 'i'
440: 'b'
441: 'l'
442: 'e'
443: 'm'
444: 'e'
445: 'm'
446: 'o'
447: 'n'
448: 'l'
449: 'y'
450: 'i'
451: 'n'
452: 'l'
453: 'i'
454: 'n'
455: 'e'
456: 'h'
457: 'i'
458: 'n'
459: 't'
460: 'j'
461: 'u'
462: 'm'
463: 'p'
464: 't'
465: 'a'
466: 'b'
467: 'l'
468: 'e'
469: 'm'
470: 'i'
471: 'n'
472: 's'
473: 'i'
474: 'z'
475: 'e'
476: 'n'
477: 'a'
478: 'k'
479: 'e'
480: 'd'
481: 'n'
482: 'o'
483: 'b'
484: 'u'
485: 'i'
486: 'l'
487: 't'
488: 'i'
489: 'n'
490: 'n'
491: 'o'
492: 'd'
493: 'u'
494: 'p'
495: 'l'
496: 'i'
497: 'c'
498: 'a'
499: 't'
500: 'e'
501: 'n'
502: 'o'
503: 'i'
504: 'm'
505: 'p'
506: 'l'
507: 'i'
508: 'c'
509: 'i'
510: 't'
511: 'f'
512: 'l'
513: 'o'
514: 'a'
515: 't'
516: 'n'
517: 'o'
518: 'i'
519: 'n'
520: 'l'
521: 'i'
522: 'n'
523: 'e'
524: 'n'
525: 'o'
526: 'n'
527: 'l'
528: 'a'
529: 'z'
530: 'y'
531: 'b'
532: 'i'
533: 'n'
534: 'd'
535: 'n'
536: 'o'
537: 'r'
538: 'e'
539: 'c'
540: 'u'
541: 'r'
542: 's'
543: 'e'
544: 'n'
545: 'o'
546: 'r'
547: 'e'
548: 'd'
549: 'z'
550: 'o'
551: 'n'
552: 'e'
553: 'n'
554: 'o'
555: 'r'
556: 'e'
557: 't'
558: 'u'
559: 'r'
560: 'n'
561: 'n'
562: 'o'
563: 'u'
564: 'n'
565: 'w'
566: 'i'
567: 'n'
568: 'd'
569: 'o'
570: 'p'
571: 't'
572: 'n'
573: 'o'
574: 'n'
575: 'e'
576: 'o'
577: 'p'
578: 't'
579: 's'
580: 'i'
581: 'z'
582: 'e'
583: 'r'
584: 'e'
585: 't'
586: 'u'
587: 'r'
588: 'n'
589: 's'
590: '_'
591: 't'
592: 'w'
593: 'i'
594: 'c'
595: 'e'
596: 's'
597: 'a'
598: 'f'
599: 'e'
600: 's'
601: 't'
602: 'a'
603: 'c'
604: 'k'
605: 's'
606: 'a'
607: 'n'
608: 'i'
609: 't'
610: 'i'
611: 'z'
612: 'e'
613: '_'
614: 'a'
615: 'd'
616: 'd'
617: 'r'
618: 'e'
619: 's'
620: 's'
621: 's'
622: 'a'
623: 'n'
624: 'i'
625: 't'
626: 'i'
627: 'z'
628: 'e'
629: '_'
630: 'm'
631: 'e'
632: 'm'
633: 'o'
634: 'r'
635: 'y'
636: 's'
637: 'a'
638: 'n'
639: 'i'
640: 't'
641: 'i'
642: 'z'
643: 'e'
644: '_'
645: 't'
646: 'h'
647: 'r'
648: 'e'
649: 'a'
650: 'd'
651: 's'
652: 's'
653: 'p'
654: 's'
655: 's'
656: 'p'
657: 'r'
658: 'e'
659: 'q'
660: 's'
661: 's'
662: 'p'
663: 's'
664: 't'
665: 'r'
666: 'o'
667: 'n'
668: 'g'
669: 'u'
670: 'w'
671: 't'
672: 'a'
673: 'b'
674: 'l'
675: 'e'
676: '!'
677: 'v'
678: 'o'
679: 'i'
680: 'd'
681: 'l'
682: 'a'
683: 'b'
684: 'e'
685: 'l'
686: '*'
687: '['
688: 'x'
689: ']'
690: '<'
691: '>'
692: 'f'
693: 'a'
694: 'l'
695: 's'
696: 'e'
697: 't'
698: 'r'
699: 'u'
700: 'e'
701: 'n'
702: 'u'
703: 'l'
704: 'l'
705: 'c'
706: 'z'
707: 'e'
708: 'r'
709: 'o'
710: 'i'
711: 'n'
712: 'i'
713: 't'
714: 'i'
715: 'a'
716: 'l'
717: 'i'
718: 'z'
719: 'e'
720: 'r'
721: 'g'
722: 'e'
723: 't'
724: 'e'
725: 'l'
726: 'e'
727: 'm'
728: 'e'
729: 'n'
730: 't'
731: 'p'
732: 't'
733: 'r'
734: 'r'
735: 'e'
736: 't'
737: 'b'
738: 'r'
739: 'u'
740: 'n'
741: 'r'
742: 'e'
743: 'a'
744: 'c'
745: 'h'
746: 'a'
747: 'b'
748: 'l'
749: 'e'
750: 'a'
751: 'd'
752: 'd'
753: 'n'
754: 's'
755: 'w'
756: 'n'
757: 'u'
758: 'w'
759: 'f'
760: 'a'
761: 'd'
762: 'd'
763: 's'
764: 'u'
765: 'b'
766: 'f'
767: 's'
768: 'u'
769: 'b'
770: 'm'
771: 'u'
772: 'l'
773: 'f'
774: 'm'
775: 'u'
776: 'l'
777: 'u'
778: 'd'
779: 'i'
780: 'v'
781: 'e'
782: 'x'
783: 'a'
784: 'c'
785: 't'
786: 's'
787: 'd'
788: 'i'
789: 'v'
790: 'f'
791: 'd'
792: 'i'
793: 'v'
794: 'u'
795: 'r'
796: 'e'
797: 'm'
798: 's'
799: 'r'
800: 'e'
801: 'm'
802: 'f'
803: 'r'
804: 'e'
805: 'm'
806: 's'
807: 'h'
808: 'l'
809: 'l'
810: 's'
811: 'h'
812: 'r'
813: 'a'
814: 's'
815: 'h'
816: 'r'
817: 'a'
818: 'n'
819: 'd'
820: 'o'
821: 'r'
822: 'x'
823: 'o'
824: 'r'
825: 'a'
826: 'l'
827: 'l'
828: 'o'
829: 'c'
830: 'a'
831: 'l'
832: 'o'
833: 'a'
834: 'd'
835: 's'
836: 't'
837: 'o'
838: 'r'
839: 'e'
840: 'i'
841: 'n'
842: 'b'
843: 'o'
844: 'u'
845: 'n'
846: 'd'
847: 's'
848: 't'
849: 'r'
850: 'u'
851: 'n'
852: 'c'
853: 't'
854: 'o'
855: 'z'
856: 'e'
857: 'x'
858: 't'
859: 's'
860: 'e'
861: 'x'
862: 't'
863: 'f'
864: 'p'
865: 't'
866: 'r'
867: 'u'
868: 'n'
869: 'c'
870: 'f'
871: 'p'
872: 'e'
873: 'x'
874: 't'
875: 'f'
876: 'p'
877: 't'
878: 'o'
879: 'u'
880: 'i'
881: 'f'
882: 'p'
883: 't'
884: 'o'
885: 's'
886: 'i'
887: 'u'
888: 'i'
889: 't'
890: 'o'
891: 'f'
892: 'p'
893: 's'
894: 'i'
895: 't'
896: 'o'
897: 'f'
898: 'p'
899: 'p'
900: 't'
901: 'r'
902: 't'
903: 'o'
904: 'i'
905: 'n'
906: 't'
907: 'i'
908: 'n'
909: 't'
910: 't'
911: 'o'
912: 'p'
913: 't'
914: 'r'
915: 'b'
916: 'i'
917: 't'
918: 'c'
919: 'a'
920: 's'
921: 't'
922: 'a'
923: 'd'
924: 'd'
925: 'r'
926: 's'
927: 'p'
928: 'a'
929: 'c'
930: 'e'
931: 'c'
932: 'a'
933: 's'
934: 't'
935: 'i'
936: 'c'
937: 'm'
938: 'p'
939: 'e'
940: 'q'
941: 'n'
942: 'e'
943: 'u'
944: 'g'
945: 't'
946: 'u'
947: 'g'
948: 'e'
949: 'u'
950: 'l'
951: 't'
952: 'u'
953: 'l'
954: 'e'
955: 's'
956: 'g'
957: 't'
958: 's'
959: 'g'
960: 'e'
961: 's'
962: 'l'
963: 't'
964: 's'
965: 'l'
966: 'e'
967: 'p'
968: 'h'
969: 'i'
970: 's'
971: 'e'
972: 'l'
973: 'e'
974: 'c'
975: 't'
976: 'c'
977: 'a'
978: 'l'
979: 'l'
980: '$'
981: '-'
982: '.'
983: '_'
984: '@'
985: '@'
986: '%'
987: '%'
988: '-'
989: 's'
990: 'u'
991: '0'
992: 'x'
993: '"'
994: '"'
995: ';'
996: '\n'
997: \u0000
998: ' '
999: '\t'
1000: '\r'
1001: '\n'
1002: 'A'-'Z'
1003: 'a'-'z'
1004: '0'-'9'
1005: '0'-'9'
1006: 'A'-'F'
1007: 'a'-'f'
1008: .

*/
