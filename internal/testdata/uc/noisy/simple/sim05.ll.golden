target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"
define i32 @main() {
0:
	%cr = alloca [1 x i8]
	%x = alloca i32
	%y = alloca i32
	%1 = getelementptr [1 x i8], [1 x i8]* %cr, i32 0, i64 0
	store i8 10, i8* %1
	%2 = getelementptr [1 x i8], [1 x i8]* %cr, i32 0, i64 1
	store i8 0, i8* %2
	call void @putint(i32 42)
	%3 = getelementptr [1 x i8], [1 x i8]* %cr, i32 0, i32 0
	call void @putstring(i8* %3)
	call void @putint(i32 42)
	%4 = getelementptr [1 x i8], [1 x i8]* %cr, i32 0, i32 0
	call void @putstring(i8* %4)
	call void @putint(i32 42)
	%5 = getelementptr [1 x i8], [1 x i8]* %cr, i32 0, i32 0
	call void @putstring(i8* %5)
	call void @putint(i32 42)
	%6 = getelementptr [1 x i8], [1 x i8]* %cr, i32 0, i32 0
	call void @putstring(i8* %6)
	call void @putint(i32 42)
	%7 = getelementptr [1 x i8], [1 x i8]* %cr, i32 0, i32 0
	call void @putstring(i8* %7)
	call void @putint(i32 42)
	%8 = getelementptr [1 x i8], [1 x i8]* %cr, i32 0, i32 0
	call void @putstring(i8* %8)
	call void @putint(i32 42)
	%9 = getelementptr [1 x i8], [1 x i8]* %cr, i32 0, i32 0
	call void @putstring(i8* %9)
	store i32 6, i32* %y
	store i32 6, i32* %x
	%10 = load i32, i32* %x
	%11 = load i32, i32* %y
	%12 = add i32 %11, 1
	%13 = mul i32 %10, %12
	call void @putint(i32 %13)
	%14 = getelementptr [1 x i8], [1 x i8]* %cr, i32 0, i32 0
	call void @putstring(i8* %14)
	store i32 5, i32* %y
	store i32 8, i32* %x
	%15 = load i32, i32* %x
	%16 = load i32, i32* %y
	%17 = mul i32 %15, %16
	%18 = add i32 %17, 2
	call void @putint(i32 %18)
	%19 = getelementptr [1 x i8], [1 x i8]* %cr, i32 0, i32 0
	call void @putstring(i8* %19)
	call void @putint(i32 3141592)
	%20 = getelementptr [1 x i8], [1 x i8]* %cr, i32 0, i32 0
	call void @putstring(i8* %20)
	call void @putint(i32 1)
	call void @putint(i32 1)
	call void @putint(i32 0)
	call void @putint(i32 0)
	call void @putint(i32 0)
	call void @putint(i32 1)
	call void @putint(i32 0)
	call void @putint(i32 0)
	call void @putint(i32 0)
	%21 = getelementptr [1 x i8], [1 x i8]* %cr, i32 0, i32 0
	call void @putstring(i8* %21)
	ret i32 0
}
declare void @putint(i32)
declare void @putstring(i8*)
