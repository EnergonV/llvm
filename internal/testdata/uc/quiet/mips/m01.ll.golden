target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"
@b = global i32 0
@addi = global i8 0
@la = global i32 0
define void @jal() {
0:
	%1 = load i32, i32* @b
	%2 = load i8, i8* @addi
	%3 = sext i8 %2 to i32
	%4 = mul i32 %1, %3
	%5 = load i32, i32* @la
	%6 = add i32 %4, %5
	store i32 %6, i32* @b
	ret void
}
define i32 @mov(i32 %lb) {
0:
	%1 = alloca i32
	%2 = alloca i32
	store i32 %lb, i32* %2
	%3 = load i32, i32* %2
	%4 = trunc i32 %3 to i8
	store i8 %4, i8* @addi
	%5 = load i32, i32* %1
	ret i32 %5
}
define i32 @main() {
0:
	store i32 8, i32* @la
	call void @jal()
	%1 = load i32, i32* @la
	%2 = call i32 @mov(i32 %1)
	ret i32 0
}
